c
loans_stats
n
partner_leads
n
c
n
partner_leads
n
c
exception
n
c
exception
n
c
loans_stats
n
partner_leads
n
total_data
n
current_user.role.downcase == "admin"
n
c
n
c
decoded[:user_id]c
decoded
decoded[:user_id]
User.find(decoded[:user_id])
n
decode_token(header)
n
c
JWT::DecodeError
n
c
decoded = JWT.decode(token, Rails.application.credentials.secret_key_base)[0]
decoded = JWT.decode(token, Rails.application.credentials.secret_key_base)
decoded = JWT.decode(token, Rails.application.credentials)
decoded = JWT.decode(token, Rails.application)
decoded = JWT.decode(token, Rails.application
decoded = JWT.decode(token, Rails.application.credentials
decoded = JWT.decode(token, Rails.application.credentials.secret_key_base)[0]
token =header
header
n
c
header
decode_token(header)
n
c
  HashWithIndifferentAccess.new(decoded)
decoded = JWT.decode(token, Rails.application.credentials.secret_key_base)[0]
header
decode_token(header)
n
c
super
n
c
request.content_type =~ /json/
request.content_type
request.format
request.format.string?
request.format.hash?
request.format.hash
request.format
c
request.format
request.format.json?
n
c
params
c
params
c
params
c
n
request.format.json?
c
n
c
n
decoded[:user_id]
decoded
n
decoded[:user_id]
decode_token(header)
n
c
clear
request.headers
request.header
request.headers
request
headers
params
decode_token(header)
n
header 
n
request.headers["Authorization"]
