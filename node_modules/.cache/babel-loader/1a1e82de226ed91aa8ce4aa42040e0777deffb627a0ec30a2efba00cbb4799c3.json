{"ast":null,"code":"function _slicedToArray(r, e) {\n  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\n/*!\n\n=========================================================\n* Black Dashboard React v1.2.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport { Collapse, InputGroup, NavbarBrand, Navbar, Nav, Container, NavbarToggler } from \"reactstrap\";\nfunction AdminNavbar(props) {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    collapseOpen = _React$useState2[0],\n    setcollapseOpen = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    modalSearch = _React$useState4[0],\n    setmodalSearch = _React$useState4[1];\n  var _React$useState5 = React.useState(\"navbar-transparent\"),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    color = _React$useState6[0],\n    setcolor = _React$useState6[1];\n  React.useEffect(function () {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  var updateColor = function updateColor() {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  var toggleCollapse = function toggleCollapse() {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n    setcollapseOpen(!collapseOpen);\n  };\n  // this function is to open the Search modal\n  var toggleModalSearch = function toggleModalSearch() {\n    setmodalSearch(!modalSearch);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    className: classNames(\"\", color),\n    expand: \"lg\"\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-wrapper\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"navbar-toggle d-inline\", {\n      toggled: props.sidebarOpened\n    })\n  }, /*#__PURE__*/React.createElement(NavbarToggler, {\n    onClick: props.toggleSidebar\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navbar-toggler-bar bar1\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navbar-toggler-bar bar2\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navbar-toggler-bar bar3\"\n  }))), /*#__PURE__*/React.createElement(NavbarBrand, {\n    href: \"#pablo\",\n    onClick: function onClick(e) {\n      return e.preventDefault();\n    }\n  }, props.brandText)), /*#__PURE__*/React.createElement(NavbarToggler, {\n    onClick: toggleCollapse\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navbar-toggler-bar navbar-kebab\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navbar-toggler-bar navbar-kebab\"\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navbar-toggler-bar navbar-kebab\"\n  })), /*#__PURE__*/React.createElement(Collapse, {\n    navbar: true,\n    isOpen: collapseOpen\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"ml-auto\",\n    navbar: true\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"search-bar\"\n  }), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"separator d-lg-none\"\n  }))))));\n}\nexport default AdminNavbar;","map":{"version":3,"names":["React","classNames","Collapse","InputGroup","NavbarBrand","Navbar","Nav","Container","NavbarToggler","AdminNavbar","props","_React$useState","useState","_React$useState2","_slicedToArray","collapseOpen","setcollapseOpen","_React$useState3","_React$useState4","modalSearch","setmodalSearch","_React$useState5","_React$useState6","color","setcolor","useEffect","window","addEventListener","updateColor","cleanup","removeEventListener","innerWidth","toggleCollapse","toggleModalSearch","createElement","Fragment","className","expand","fluid","toggled","sidebarOpened","onClick","toggleSidebar","href","e","preventDefault","brandText","navbar","isOpen"],"sources":["/home/satendrakumar/los/app/javascript/src/components/Navbars/AuthNavbar.js"],"sourcesContent":["/*!\n\n=========================================================\n* Black Dashboard React v1.2.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Collapse,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  Nav,\n  Container,\n  NavbarToggler,\n} from \"reactstrap\";\n\nfunction AdminNavbar(props) {\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\n  const [modalSearch, setmodalSearch] = React.useState(false);\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener(\"resize\", updateColor);\n    };\n  });\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && collapseOpen) {\n      setcolor(\"bg-white\");\n    } else {\n      setcolor(\"navbar-transparent\");\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  const toggleCollapse = () => {\n    if (collapseOpen) {\n      setcolor(\"navbar-transparent\");\n    } else {\n      setcolor(\"bg-white\");\n    }\n    setcollapseOpen(!collapseOpen);\n  };\n  // this function is to open the Search modal\n  const toggleModalSearch = () => {\n    setmodalSearch(!modalSearch);\n  };\n  return (\n    <>\n      <Navbar className={classNames(\"\", color)} expand=\"lg\">\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div\n              className={classNames(\"navbar-toggle d-inline\", {\n                toggled: props.sidebarOpened,\n              })}\n            >\n              <NavbarToggler onClick={props.toggleSidebar}>\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </NavbarToggler>\n            </div>\n            <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n              {props.brandText}\n            </NavbarBrand>\n          </div>\n          <NavbarToggler onClick={toggleCollapse}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse navbar isOpen={collapseOpen}>\n            <Nav className=\"ml-auto\" navbar>\n              <InputGroup className=\"search-bar\"></InputGroup>\n              <li className=\"separator d-lg-none\" />\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\nexport default AdminNavbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}