{"ast":null,"code":"\"use client\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _excluded = [\"bsPrefix\", \"expand\", \"variant\", \"bg\", \"fixed\", \"sticky\", \"className\", \"as\", \"expanded\", \"onToggle\", \"onSelect\", \"collapseOnSelect\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], t.indexOf(o) >= 0 || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport NavbarText from './NavbarText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Navbar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n      expanded: 'onToggle'\n    }),\n    initialBsPrefix = _useUncontrolled.bsPrefix,\n    _useUncontrolled$expa = _useUncontrolled.expand,\n    expand = _useUncontrolled$expa === void 0 ? true : _useUncontrolled$expa,\n    _useUncontrolled$vari = _useUncontrolled.variant,\n    variant = _useUncontrolled$vari === void 0 ? 'light' : _useUncontrolled$vari,\n    bg = _useUncontrolled.bg,\n    fixed = _useUncontrolled.fixed,\n    sticky = _useUncontrolled.sticky,\n    className = _useUncontrolled.className,\n    _useUncontrolled$as = _useUncontrolled.as,\n    Component = _useUncontrolled$as === void 0 ? 'nav' : _useUncontrolled$as,\n    expanded = _useUncontrolled.expanded,\n    _onToggle = _useUncontrolled.onToggle,\n    onSelect = _useUncontrolled.onSelect,\n    _useUncontrolled$coll = _useUncontrolled.collapseOnSelect,\n    collapseOnSelect = _useUncontrolled$coll === void 0 ? false : _useUncontrolled$coll,\n    controlledProps = _objectWithoutProperties(_useUncontrolled, _excluded);\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  var handleCollapse = useCallback(function () {\n    onSelect == null ? void 0 : onSelect.apply(void 0, arguments);\n    if (collapseOnSelect && expanded) {\n      _onToggle == null ? void 0 : _onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, _onToggle]);\n\n  // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n  var expandClass = \"\".concat(bsPrefix, \"-expand\");\n  if (typeof expand === 'string') expandClass = \"\".concat(expandClass, \"-\").concat(expand);\n  var navbarContext = useMemo(function () {\n    return {\n      onToggle: function onToggle() {\n        return _onToggle == null ? void 0 : _onToggle(!expanded);\n      },\n      bsPrefix: bsPrefix,\n      expanded: !!expanded,\n      expand: expand\n    };\n  }, [bsPrefix, expanded, expand, _onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n        ref: ref\n      }, controlledProps), {}, {\n        className: classNames(className, bsPrefix, expand && expandClass, variant && \"\".concat(bsPrefix, \"-\").concat(variant), bg && \"bg-\".concat(bg), sticky && \"sticky-\".concat(sticky), fixed && \"fixed-\".concat(fixed))\n      }))\n    })\n  });\n});\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}