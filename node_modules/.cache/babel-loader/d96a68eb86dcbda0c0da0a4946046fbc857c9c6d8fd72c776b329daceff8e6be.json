{"ast":null,"code":"/*!\n\n=========================================================\n* Black Dashboard React v1.2.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\nimport { BackgroundColorContext, backgroundColors } from \"../../contexts/BackgroundColorContext\";\nvar ps;\nfunction Sidebar(props) {\n  var location = useLocation();\n  var sidebarRef = React.useRef(null);\n  // verifies if routeName is the one active (in browser input)\n  var activeRoute = function activeRoute(routeName) {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  React.useEffect(function () {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebarRef.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    };\n  });\n  var linkOnClick = function linkOnClick() {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  var routes = props.routes,\n    rtlActive = props.rtlActive,\n    logo = props.logo;\n  var logoImg = null;\n  var logoText = null;\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = /*#__PURE__*/React.createElement(\"a\", {\n        href: logo.outterLink,\n        className: \"simple-text logo-mini\",\n        target: \"_blank\",\n        onClick: props.toggleSidebar\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo-img\"\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo.imgSrc,\n        alt: \"react-logo\"\n      })));\n      logoText = /*#__PURE__*/React.createElement(\"a\", {\n        href: logo.outterLink,\n        className: \"simple-text logo-normal\",\n        target: \"_blank\",\n        onClick: props.toggleSidebar\n      }, logo.text);\n    } else {\n      logoImg = /*#__PURE__*/React.createElement(Link, {\n        to: logo.innerLink,\n        className: \"simple-text logo-mini\",\n        onClick: props.toggleSidebar\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo-img\"\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo.imgSrc,\n        alt: \"react-logo\"\n      })));\n      logoText = /*#__PURE__*/React.createElement(Link, {\n        to: logo.innerLink,\n        className: \"simple-text logo-normal\",\n        onClick: props.toggleSidebar\n      }, logo.text);\n    }\n  }\n  return /*#__PURE__*/React.createElement(BackgroundColorContext.Consumer, null, function (_ref) {\n    var color = _ref.color;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      data: color\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-wrapper\",\n      ref: sidebarRef\n    }, logoImg !== null || logoText !== null ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logo\"\n    }, logoImg, logoText) : null, /*#__PURE__*/React.createElement(Nav, null, routes.map(function (prop, key) {\n      if (prop.redirect) return null;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\"),\n        key: key\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: prop.layout + prop.path,\n        className: \"nav-link\",\n        activeClassName: \"active\",\n        onClick: props.toggleSidebar\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: prop.icon\n      }), /*#__PURE__*/React.createElement(\"p\", null, rtlActive ? prop.rtlName : prop.name)));\n    }))));\n  });\n}\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\nexport default Sidebar;","map":{"version":3,"names":["React","NavLink","Link","useLocation","PropTypes","PerfectScrollbar","Nav","ReactstrapNavLink","BackgroundColorContext","backgroundColors","ps","Sidebar","props","location","sidebarRef","useRef","activeRoute","routeName","pathname","useEffect","navigator","platform","indexOf","current","suppressScrollX","suppressScrollY","cleanup","destroy","linkOnClick","document","documentElement","classList","remove","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","createElement","href","className","target","onClick","toggleSidebar","src","imgSrc","alt","text","to","innerLink","Consumer","_ref","color","data","ref","map","prop","key","redirect","path","pro","layout","activeClassName","icon","rtlName","name","propTypes","bool","arrayOf","object","shape","string","node"],"sources":["/home/avinashgupta/Desktop/jdjedddkll/los/app/javascript/src/components/Sidebar/Sidebar.js"],"sourcesContent":["/*!\n\n=========================================================\n* Black Dashboard React v1.2.1\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2022 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\nimport {\n  BackgroundColorContext,\n  backgroundColors\n} from \"../../contexts/BackgroundColorContext\";\n\nvar ps;\n\nfunction Sidebar(props) {\n  const location = useLocation();\n  const sidebarRef = React.useRef(null);\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(sidebarRef.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    };\n  });\n  const linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  const { routes, rtlActive, logo } = props;\n  let logoImg = null;\n  let logoText = null;\n  if (logo !== undefined) {\n    if (logo.outterLink !== undefined) {\n      logoImg = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-mini\"\n          target=\"_blank\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </a>\n      );\n      logoText = (\n        <a\n          href={logo.outterLink}\n          className=\"simple-text logo-normal\"\n          target=\"_blank\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </a>\n      );\n    } else {\n      logoImg = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-mini\"\n          onClick={props.toggleSidebar}\n        >\n          <div className=\"logo-img\">\n            <img src={logo.imgSrc} alt=\"react-logo\" />\n          </div>\n        </Link>\n      );\n      logoText = (\n        <Link\n          to={logo.innerLink}\n          className=\"simple-text logo-normal\"\n          onClick={props.toggleSidebar}\n        >\n          {logo.text}\n        </Link>\n      );\n    }\n  }\n  return (\n    <BackgroundColorContext.Consumer>\n      {({ color }) => (\n        <div className=\"sidebar\" data={color}>\n          <div className=\"sidebar-wrapper\" ref={sidebarRef}>\n            {logoImg !== null || logoText !== null ? (\n              <div className=\"logo\">\n                {logoImg}\n                {logoText}\n              </div>\n            ) : null}\n            <Nav>\n              {routes.map((prop, key) => {\n                if (prop.redirect) return null;\n                return (\n                  <li\n                    className={\n                      activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\")\n                    }\n                    key={key}\n                  >\n                    <NavLink\n                      to={prop.layout + prop.path}\n                      className=\"nav-link\"\n                      activeClassName=\"active\"\n                      onClick={props.toggleSidebar}\n                    >\n                      <i className={prop.icon} />\n                      <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                    </NavLink>\n                  </li>\n                );\n              })}\n            </Nav>\n          </div>\n        </div>\n      )}\n    </BackgroundColorContext.Consumer>\n  );\n}\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\n\nexport default Sidebar;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D;AACA,SAASC,SAAS,QAAQ,YAAY;;AAEtC;AACA,OAAOC,gBAAgB,MAAM,mBAAmB;;AAEhD;AACA,SAASC,GAAG,EAAEL,OAAO,IAAIM,iBAAiB,QAAQ,YAAY;AAC9D,SACEC,sBAAsB,EACtBC,gBAAgB,QACX,uCAAuC;AAE9C,IAAIC,EAAE;AAEN,SAASC,OAAOA,CAACC,KAAK,EAAE;EACtB,IAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,IAAMW,UAAU,GAAGd,KAAK,CAACe,MAAM,CAAC,IAAI,CAAC;EACrC;EACA,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,SAAS,EAAK;IACjC,OAAOJ,QAAQ,CAACK,QAAQ,KAAKD,SAAS,GAAG,QAAQ,GAAG,EAAE;EACxD,CAAC;EACDjB,KAAK,CAACmB,SAAS,CAAC,YAAM;IACpB,IAAIC,SAAS,CAACC,QAAQ,CAACC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;MAC1CZ,EAAE,GAAG,IAAIL,gBAAgB,CAACS,UAAU,CAACS,OAAO,EAAE;QAC5CC,eAAe,EAAE,IAAI;QACrBC,eAAe,EAAE;MACnB,CAAC,CAAC;IACJ;IACA;IACA,OAAO,SAASC,OAAOA,CAAA,EAAG;MACxB,IAAIN,SAAS,CAACC,QAAQ,CAACC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;QAC1CZ,EAAE,CAACiB,OAAO,CAAC,CAAC;MACd;IACF,CAAC;EACH,CAAC,CAAC;EACF,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBC,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,UAAU,CAAC;EACvD,CAAC;EACD,IAAQC,MAAM,GAAsBrB,KAAK,CAAjCqB,MAAM;IAAEC,SAAS,GAAWtB,KAAK,CAAzBsB,SAAS;IAAEC,IAAI,GAAKvB,KAAK,CAAduB,IAAI;EAC/B,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,QAAQ,GAAG,IAAI;EACnB,IAAIF,IAAI,KAAKG,SAAS,EAAE;IACtB,IAAIH,IAAI,CAACI,UAAU,KAAKD,SAAS,EAAE;MACjCF,OAAO,gBACLpC,KAAA,CAAAwC,aAAA;QACEC,IAAI,EAAEN,IAAI,CAACI,UAAW;QACtBG,SAAS,EAAC,uBAAuB;QACjCC,MAAM,EAAC,QAAQ;QACfC,OAAO,EAAEhC,KAAK,CAACiC;MAAc,gBAE7B7C,KAAA,CAAAwC,aAAA;QAAKE,SAAS,EAAC;MAAU,gBACvB1C,KAAA,CAAAwC,aAAA;QAAKM,GAAG,EAAEX,IAAI,CAACY,MAAO;QAACC,GAAG,EAAC;MAAY,CAAE,CACtC,CACJ,CACJ;MACDX,QAAQ,gBACNrC,KAAA,CAAAwC,aAAA;QACEC,IAAI,EAAEN,IAAI,CAACI,UAAW;QACtBG,SAAS,EAAC,yBAAyB;QACnCC,MAAM,EAAC,QAAQ;QACfC,OAAO,EAAEhC,KAAK,CAACiC;MAAc,GAE5BV,IAAI,CAACc,IACL,CACJ;IACH,CAAC,MAAM;MACLb,OAAO,gBACLpC,KAAA,CAAAwC,aAAA,CAACtC,IAAI;QACHgD,EAAE,EAAEf,IAAI,CAACgB,SAAU;QACnBT,SAAS,EAAC,uBAAuB;QACjCE,OAAO,EAAEhC,KAAK,CAACiC;MAAc,gBAE7B7C,KAAA,CAAAwC,aAAA;QAAKE,SAAS,EAAC;MAAU,gBACvB1C,KAAA,CAAAwC,aAAA;QAAKM,GAAG,EAAEX,IAAI,CAACY,MAAO;QAACC,GAAG,EAAC;MAAY,CAAE,CACtC,CACD,CACP;MACDX,QAAQ,gBACNrC,KAAA,CAAAwC,aAAA,CAACtC,IAAI;QACHgD,EAAE,EAAEf,IAAI,CAACgB,SAAU;QACnBT,SAAS,EAAC,yBAAyB;QACnCE,OAAO,EAAEhC,KAAK,CAACiC;MAAc,GAE5BV,IAAI,CAACc,IACF,CACP;IACH;EACF;EACA,oBACEjD,KAAA,CAAAwC,aAAA,CAAChC,sBAAsB,CAAC4C,QAAQ,QAC7B,UAAAC,IAAA;IAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAA,oBACPtD,KAAA,CAAAwC,aAAA;MAAKE,SAAS,EAAC,SAAS;MAACa,IAAI,EAAED;IAAM,gBACnCtD,KAAA,CAAAwC,aAAA;MAAKE,SAAS,EAAC,iBAAiB;MAACc,GAAG,EAAE1C;IAAW,GAC9CsB,OAAO,KAAK,IAAI,IAAIC,QAAQ,KAAK,IAAI,gBACpCrC,KAAA,CAAAwC,aAAA;MAAKE,SAAS,EAAC;IAAM,GAClBN,OAAO,EACPC,QACE,CAAC,GACJ,IAAI,eACRrC,KAAA,CAAAwC,aAAA,CAAClC,GAAG,QACD2B,MAAM,CAACwB,GAAG,CAAC,UAACC,IAAI,EAAEC,GAAG,EAAK;MACzB,IAAID,IAAI,CAACE,QAAQ,EAAE,OAAO,IAAI;MAC9B,oBACE5D,KAAA,CAAAwC,aAAA;QACEE,SAAS,EACP1B,WAAW,CAAC0C,IAAI,CAACG,IAAI,CAAC,IAAIH,IAAI,CAACI,GAAG,GAAG,aAAa,GAAG,EAAE,CACxD;QACDH,GAAG,EAAEA;MAAI,gBAET3D,KAAA,CAAAwC,aAAA,CAACvC,OAAO;QACNiD,EAAE,EAAEQ,IAAI,CAACK,MAAM,GAAGL,IAAI,CAACG,IAAK;QAC5BnB,SAAS,EAAC,UAAU;QACpBsB,eAAe,EAAC,QAAQ;QACxBpB,OAAO,EAAEhC,KAAK,CAACiC;MAAc,gBAE7B7C,KAAA,CAAAwC,aAAA;QAAGE,SAAS,EAAEgB,IAAI,CAACO;MAAK,CAAE,CAAC,eAC3BjE,KAAA,CAAAwC,aAAA,YAAIN,SAAS,GAAGwB,IAAI,CAACQ,OAAO,GAAGR,IAAI,CAACS,IAAQ,CACrC,CACP,CAAC;IAET,CAAC,CACE,CACF,CACF,CAAC;EAAA,CAEuB,CAAC;AAEtC;AAEAxD,OAAO,CAACyD,SAAS,GAAG;EAClB;EACA;EACAlC,SAAS,EAAE9B,SAAS,CAACiE,IAAI;EACzBpC,MAAM,EAAE7B,SAAS,CAACkE,OAAO,CAAClE,SAAS,CAACmE,MAAM,CAAC;EAC3CpC,IAAI,EAAE/B,SAAS,CAACoE,KAAK,CAAC;IACpB;IACA;IACArB,SAAS,EAAE/C,SAAS,CAACqE,MAAM;IAC3B;IACA;IACAlC,UAAU,EAAEnC,SAAS,CAACqE,MAAM;IAC5B;IACAxB,IAAI,EAAE7C,SAAS,CAACsE,IAAI;IACpB;IACA3B,MAAM,EAAE3C,SAAS,CAACqE;EACpB,CAAC;AACH,CAAC;AAED,eAAe9D,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}